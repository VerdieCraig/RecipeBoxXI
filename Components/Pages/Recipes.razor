@page "/recipes"
@using RecipeBox.DataAccess
@using RecipeBox.Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<RecipeDbContext> DbContextFactory


<h1>Recipes</h1>

What would you like to make today?

@if (recipes == null)
{
    <p><em>Loading...</em></p>
}
else if (!recipes.Any())
{
    <p>No recipes found. Try adding some!</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Servings</th>
                <th>Prep Time</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var recipe in recipes)
            {
                <tr>
                    <td><a href="/recipes/@recipe.Recipe_Id">@recipe.Recipe_Name</a></td>
                    <td>@recipe.Recipe_Category</td>
                    <td>@recipe.Recipe_Servings</td>
                    <td>@recipe.Recipe_PrepTime min</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    @code {
        private List<Recipe>? recipes;

        protected override async Task OnInitializedAsync()
        {
            try
            {
                // Create DbContext instance without arguments
                using var dbContext = await DbContextFactory.CreateDbContextAsync();
                recipes = await dbContext.Recipes.ToListAsync();
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error loading recipes: {ex.Message}");
            }
        }
    }
}
